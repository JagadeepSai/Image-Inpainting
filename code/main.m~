clc;
clear all;
close all;
tic;
<<<<<<< HEAD
image = imread('../data/images/c5.jpg');
% image =  imgaussfilt(image,2);
image=rgb2hsv(image);
image = double(image);
imshow(image);

=======
dir = '../data/dataset/c1';
image = imread(dir + '_input.png');
% image =  imgaussfilt(image,2);
image=rgb2ycbcr(image);
image = double(image);
>>>>>>> 08dc4c1656728e088a0664b802321eefe2f583df

% figure(1), hold off, imagesc(image);

% [x, y] = ginput;                                                              
% mask = 255-255*poly2mask(x, y, size(image, 1), size(image, 2)); 


<<<<<<< HEAD
mask = imread('../data/images/c5_mask.bmp');
% mask = 255-mask;
mask = double(mask);                                                
% mask = mask > 0; 


psi = 10;
window = 60;
alpha=255;
width=3;
grad_window = 3;
f = 2.5;
=======
mask = imread(dir '_mask.png');
% mask = 255-mask;
mask = double(mask);
% mask = mask > 0; 


psi = 5;
window = 60;
alpha=255;
width=3;
grad_window = 6;
f = 1.5;
>>>>>>> 08dc4c1656728e088a0664b802321eefe2f583df

[rows,cols] = size(mask);
confidence_mat = double(mask > 0);  

while 1
    priority_mat = zeros(rows,cols);
%     [bx,by] = find_border(mask);
%     border_list = [bx,by];
        border_list = find_border(mask);
    if size(border_list) == [0,0]
       break
    end
    
    [n,m] = size(border_list);
    max_p_x = 0;
    max_p_y = 0;
    max_p = -1;
<<<<<<< HEAD
    G = grad1(image);
    
    %normals 
    [Nx, Ny] = gradient(double(~mask));
=======
    G = grad1(image,3);
    
    %normals 
    % [Nx, Ny] = gradient(double(~mask));
>>>>>>> 08dc4c1656728e088a0664b802321eefe2f583df
%     toc;
    for i = 1:n
        x = border_list(i,1);
        y = border_list(i,2);
        cp = confidence(psi,x,y,confidence_mat);
<<<<<<< HEAD
        dt = isophote1(x,y,G,psi,mask);
        
        norm_vector = [Nx(x,y), Ny(x,y)]';
        norm_vector = norm_vector/norm(norm_vector);
        norm_vector(~isfinite(norm_vector)) = 0;
        
%         norm_vector = norm_vec(border_list,[x,y],width);
        dp = abs(dt'*norm_vector)/alpha;
%         prio = cp*dp;
%           prio = cp*dp;
        prio = [cp; f*dp];
        prio = sum(prio);
=======
        dt = isophote1(x,y,G,grad_window,mask);
        
        % norm_vector = [Nx(x,y), Ny(x,y)]';
        % norm_vector = norm_vector/norm(norm_vector);
        % norm_vector(~isfinite(norm_vector)) = 0;
        
        norm_vector = norm_vec(border_list,[x,y],width);
        dp = abs(dt'*norm_vector)/alpha;
%         prio = cp*dp;
%           prio = cp*dp;
        prio = cp*dp;
%         prio = sum(prio);
>>>>>>> 08dc4c1656728e088a0664b802321eefe2f583df

        priority_mat(x,y) = prio;
        if prio > max_p
            max_p_x = x;
            max_p_y = y;    
            max_p = prio;
        end
    end
%     toc;
    confidence_mat(max_p_x,max_p_y) = confidence(psi,max_p_x,max_p_y,confidence_mat);
    [min_i,min_j] = patch_fill(max_p_x,max_p_y,image,mask,window,psi,confidence_mat);
    cp = confidence(psi,max_p_x,max_p_y,confidence_mat);
%     toc;
    
    
    top = max_p_x-max(max_p_x-psi,1);
    bottom = min(max_p_x+psi,rows)-max_p_x;
    left = max_p_y-max(max_p_y-psi,1);
    right = min(max_p_y+psi,cols)-max_p_y;
    
    for i=-top:bottom
        for j=-left:right
            if mask(max_p_x+i,max_p_y+j) == 0
               image(max_p_x+i,max_p_y+j,:) = image(min_i+i,min_j+j,:);
               mask(max_p_x+i,max_p_y+j)=255;
               confidence_mat(max_p_x+i,max_p_y+j) = cp;
            end
        end
    end
 toc;
figure(1);
<<<<<<< HEAD
imshow(hsv2rgb(image));
=======
imshow(ycbcr2rgb((uint8(image))));
>>>>>>> 08dc4c1656728e088a0664b802321eefe2f583df

% figure(2);
% [rows,cols] = size(mask);
I = zeros(rows, cols);
for i=1:rows
    for j=1:cols
        if(mask(i,j)==0)
<<<<<<< HEAD
            I(i,j) = norm(isophote(i, j, G, psi, mask));
        end
    end
end
 figure(3);imagesc(I); colormap(gray);

% figure(4);
% imagesc(priority_mat);colormap(gray);
% 
% figure(5);
% imagesc(confidence_mat); colormap(gray);
=======
            I(i,j) = norm(isophote(i, j, G, grad_window, mask));
        end
    end
end
% imshow(I); colormap(gray);

figure(3);
imagesc(priority_mat);colormap(gray);

figure(4);
imagesc(confidence_mat); colormap(gray);
>>>>>>> 08dc4c1656728e088a0664b802321eefe2f583df
end
% image= hsv2rgb(image);
toc;
